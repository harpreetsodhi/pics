{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSearchSubmit","className","onSubmit","this","type","value","onChange","e","setState","target","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","description","urls","style","gridRowEnd","ref","alt","src","regular","ImageList","images","map","id","App","a","unsplash","get","params","query","response","data","results","marginTop","ReactDOM","render","document","querySelector"],"mappings":"0NAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,4BACTC,QAAS,CACLC,cAAe,2D,OCwBRC,E,4MAzBXC,MAAQ,CAAEC,KAAM,I,EAEhBC,aAAe,SAAAC,GACXA,EAAMC,iBACN,EAAKC,MAAMC,eAAe,EAAKN,MAAMC,O,4CAGzC,WAAU,IAAD,OACL,OACI,qBAAKM,UAAU,aAAf,SACI,sBAAMC,SAAUC,KAAKP,aAAcK,UAAU,UAA7C,SACI,sBAAKA,UAAU,QAAf,UACI,iDACA,uBACIG,KAAK,OACLC,MAAOF,KAAKT,MAAMC,KAClBW,SAAU,SAACC,GAAQ,EAAKC,SAAS,CAAEb,KAAMY,EAAEE,OAAOJ,sB,GAlBtDK,IAAMC,WC8BfC,G,wDA5BX,WAAYb,GAAQ,IAAD,8BACf,cAAMA,IASVc,SAAW,WACP,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAC/BC,EAAQC,KAAKC,KAAKN,EAAS,IACjC,EAAKN,SAAS,CAACU,WAXf,EAAKxB,MAAQ,CAACwB,MAAO,GACrB,EAAKH,SAAWL,IAAMW,YAHP,E,qDAMnB,WACIlB,KAAKY,SAASC,QAAQM,iBAAiB,OAAQnB,KAAKU,Y,oBASxD,WACI,MAA4BV,KAAKJ,MAAMwB,MAAhCC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,KAEpB,OACI,qBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAUxB,KAAKT,MAAMwB,QAA7C,SACI,qBAAKU,IAAKzB,KAAKY,SAAUc,IAAKL,EAC9BM,IAAKL,EAAKM,gB,GAxBFrB,IAAMC,YCoBfqB,EAlBG,SAAAjC,GACd,IAAMkC,EAASlC,EAAMkC,OAAOC,KAWxB,SAACX,GAAD,OACC,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMY,OAE3B,OAAO,qBAAKlC,UAAU,aAAf,SAA6BgC,KCUzBG,E,4MAtBb1C,MAAQ,CAAEuC,OAAQ,I,EAElBjC,e,uCAAiB,WAAOL,GAAP,eAAA0C,EAAA,sEACQC,EAASC,IAAI,iBAAkB,CACpDC,OAAQ,CACNC,MAAO9C,KAHI,OACT+C,EADS,OAOf,EAAKlC,SAAS,CAAEyB,OAAQS,EAASC,KAAKC,UAPvB,2C,kGAUjB,WACE,OACE,sBAAK3C,UAAU,eAAeyB,MAAO,CAAEmB,UAAW,QAAlD,UACE,cAAC,EAAD,CAAW7C,eAAgBG,KAAKH,iBAChC,cAAC,EAAD,CAAWiC,OAAQ9B,KAAKT,MAAMuC,gB,GAlBpBvB,IAAMC,WCDxBmC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.67edc521.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://api.unsplash.com/',\n    headers: {\n        Authorization: 'Client-ID FC9J58H9YEojxHfDI4dDpH59xtkx30CpINPgcRhNbWE'\n    }\n});","import React from 'react';\n\nclass SearchBar extends React.Component {\n\n    state = { term: '' }\n\n    onFormSubmit = event => {\n        event.preventDefault();\n        this.props.onSearchSubmit(this.state.term);\n    }\n\n    render() {\n        return (\n            <div className=\"ui segment\">\n                <form onSubmit={this.onFormSubmit} className=\"ui form\">\n                    <div className=\"field\">\n                        <label>Image Search</label>\n                        <input\n                            type=\"text\"\n                            value={this.state.term}\n                            onChange={(e) => { this.setState({ term: e.target.value }) }}>\n                        </input>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;","import React from 'react';\n\nclass ImageCard extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {spans: 0}\n        this.imageRef = React.createRef();\n    }\n\n    componentDidMount(){\n        this.imageRef.current.addEventListener('load', this.setSpans);\n    }\n\n    setSpans = () => {\n        const height = this.imageRef.current.clientHeight;\n        const spans = Math.ceil(height / 10);\n        this.setState({spans});\n    }\n\n    render(){\n        const {description, urls} = this.props.image;\n\n        return (\n            <div style={{ gridRowEnd: `span ${this.state.spans}`}}>\n                <img ref={this.imageRef} alt={description}\n                src={urls.regular} />\n            </div>\n        );\n    }\n}\n\nexport default ImageCard;","import React from 'react';\nimport './ImageList.css';\nimport ImageCard from './ImageCard';\n\nconst ImageList = props => {\n    const images = props.images.map(\n\n        // (image) => <div key={image.id}>\n        //     <img alt=\"X\" src={image.urls.regular} />\n        // </div>\n        // we have to assign key to the root element in the array - in the above case it is the div\n\n        // (image) => <img key={image.id} alt={image.description} src={image.urls.regular} />\n        // here we are making use of the image keyword multiple times so what we can do instead is \n        // desctructure the properties out\n\n        (image) =>\n         <ImageCard key={image.id} image={image} />\n    );\n    return <div className=\"image-list\">{images}</div>\n};\n\nexport default ImageList;","import React from 'react';\nimport unsplash from '../api/unsplash';\nimport SearchBar from './SearchBar';\nimport ImageList from './ImageList';\n\nclass App extends React.Component {\n\n  state = { images: [] };\n\n  onSearchSubmit = async (term) => {\n    const response = await unsplash.get('/search/photos', {\n      params: {\n        query: term\n      }\n    });\n\n    this.setState({ images: response.data.results });\n  }\n\n  render() {\n    return (\n      <div className=\"ui container\" style={{ marginTop: '10px' }}>\n        <SearchBar onSearchSubmit={this.onSearchSubmit} />\n        <ImageList images={this.state.images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\n\nReactDOM.render (\n  <App/>,\n  document.querySelector('#root')\n)\n"],"sourceRoot":""}